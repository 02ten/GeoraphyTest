package com.example.geographytest;

import com.example.geographytest.databinding.FragmentSecondBinding;
import java.util.ArrayList;
import java.util.List;

public class Game {
    private String[] questions = new String[]
            {
                    "Какой именно пролив отделяет Гренландию от Исландии?",//0
                    "Столица Турции - это ....",//1
                    "Столица Румынии - это ...",//2
                    "Столица Финляндии - это ....",//3
                    "Столица Сирии - это ....",//4
                    "Какой из нижеперечисленных городов находится на побережье Атлантического океана?",//5
                    "Какая именно гора является самой высокой точкой на африканском континенте?",//6
                    "Столица Узбекистана - это ....",//7
                    "Столица Южной Кореи - это ....",//8
                    "Где находится Бразилия?",//9
                    "В каком городе мира живёт больше всего людей?",//10
                    "Какая страна самая большая в мире?",//11
                    "В какой европейской стране находится Биг-Бен?",//12
                    "Столица какой страны расположена на реке Нил?",//13
                    "Какая из этих рек не протекает по территории России?",//14
                    "Где находится Индия?",//15
                    "На какой реке стоит город Санкт-Петербург?",//16
                    "Как по-другому можно назвать Нидерланды?",//17
                    "Какое государство самое маленькое в мире?",//18
                    "В какой стране находится город Цинциннати?",//19
                    "Какая пустыня расположена в южном полушарии?",//20
                    "Какой остров самый большой в мире?",//21
                    "Какая из этих стран имеет выход к Каспийскому морю?",//22
                    "В какой стране находится город Шлиссельбург?",//23
                    "Какое из этих озер находится в Европе?",//24
                    "С какой из этих стран Франция не имеет общей границы?",//25
                    "В какой стране находится Стоунхедж?",//26
                    "Какой из этих городов расположен в Южной Америке?",//27
                    "Самая протяжённая сухопутная граница у России с?",//28
                    "На каком материке нет ни одной реки?",//29
                    "На каком материке находится самый высокий в мире водопад?",//30
                    "В какой из перечисленных стран численность населения наибольшая?",//31
                    "Какой из перечисленных действующих вулканов Евразии является самым высоким?"//32


            };
    private String[][] answers = new String[][]
            {
                    {"Датский пролив", "Девисов пролив", "Пролив Дрейка", "Берингов пролив"},//0
                    {"Стамбул", "Анкара", "Адана", "Анталья"},//1
                    {"Брашов", "Бухарест", "Тимишоара", "Сараево"},//2
                    {"Лаппеенранта", "Порвоо", "Хельсинки", "Осло"},//3
                    {"Алеппо", "Ракка", "Дамаск", "Багдад"},//4
                    {"Гуанчжоу", "Кейптаун", "Сидней", "Тунис"},//5
                    {"Эльбрус", "Стэнли", "Мавензи", "Килиманджаро"},//6
                    {"Самарканд", "Ташкент", "Бухара", "Тбилиси"},//7
                    {"Пусан", "Сеул", "Инчхон", "Пхеньян"},//8
                    {"Южная Америка", "Северная Америка", "Африка", "Азия"},//9
                    {"Токио", "Дели", "Шанхай", "Пекин"},//10
                    {"Австралия", "Канада", "США", "Россия"},//11
                    {"Франция", "Великобритания", "Польша", "Германия"},//12
                    {"Египет", "США", "Индия", "Украина"},//13
                    {"Волга", "Темза", "Амур", "Обь"},//14
                    {"Северная Америка", "Европа", "Азия", "Африка"},//15
                    {"Днепр", "Петер", "Нева", "Сена"},//16
                    {"Голландия", "Греция", "Грузия", "Гондурас"},//17
                    {"Монако", "Панама", "Ватикан", "Израиль"},//18
                    {"Италия", "Испания", "США", "Канада"},//19
                    {"Сахара", "Атакама", "Кара-Кум", "Гоби"},//20
                    {"Мадагаскар", "Новая Гвинея", "Бали", "Гренландия"},//21
                    {"Таджикистан", "Туркменистан", "Узбекистан", "Афганистан"},//22
                    {"Россия", "Германия", "Австрия", "Польша"},//23
                    {"Виктория", "Балатон", "Байкал", "Онтарио"},//24
                    {"Германия", "Бразилия", "Нидерланды", "Испания"},//25
                    {"Шотландия", "Англия", "Ирландия", "Уэльс"},//26
                    {"Кито", "Сан-Сальвадор", "Мехико", "Акапулько"},//27
                    {"Украиной", "Республикой Беларусь", "Казахстаном", "Китаем"},//28
                    {"Евразия", "Австралия", "Антарктида", "На любом материке есть реки"},//29
                    {"Африка", "Северная Америка", "Евразия", "Южная Америка"},//30
                    {"США", "Россия", "Индия", "Бразилия"},//31
                    {"Этна", "Везувий", "Фудзияма", "Ключевская Сопка"}//32

            };
    private int[] correctAnswer = new int[]{
            0,//0
            1,//1
            1,//2
            2,//3
            2,//4
            1,//5
            3,//6
            1,//7
            1,//8
            0,//9
            2,//10
            3,//11
            1,//12
            0,//13
            1,//14
            2,//15
            2,//16
            0,//17
            2,//18
            2,//19
            1,//20
            3,//21
            1,//22
            0,//23
            1,//24
            2,//25
            1,//26
            0,//27
            2,//28
            2,//29
            3,//30
            2,//31
            3 //32
    };

    public static final int totalQuestions = 20;
    private List<Integer> previousIndexes = new ArrayList<>();

    public void setConditions(FragmentSecondBinding fragmentSecondBinding){
        int randomIndex = generateRandomIndex();
        setQuestion(fragmentSecondBinding, randomIndex);
        setAnswers(fragmentSecondBinding, randomIndex);
    }

    private void setQuestion(FragmentSecondBinding binding, int randomIndex){
        binding.question.setText(questions[randomIndex]);
    }

    private void setAnswers(FragmentSecondBinding binding, int randomIndex){
        binding.answer.setText(answers[randomIndex][0]);
        binding.answer1.setText(answers[randomIndex][1]);
        binding.answer2.setText(answers[randomIndex][2]);
        binding.answer3.setText(answers[randomIndex][3]);
    }

    public boolean checkAnswer(FragmentSecondBinding binding){
        int checkedIdRadioButton = binding.radioGroup.getCheckedRadioButtonId();
        int x = 0;
        switch (checkedIdRadioButton){
            case R.id.radioButton: x = 0; break;
            case R.id.radioButton1: x = 1; break;
            case R.id.radioButton2: x = 2; break;
            case R.id.radioButton3: x = 3; break;
        }
        binding.radioGroup.clearCheck();
        System.out.println(x+ " " + correctAnswer[previousIndexes.size()-1] + " " + (previousIndexes.size()-1));
        if(x == correctAnswer[previousIndexes.get(previousIndexes.size()-1)])
            return true;
        return false;
    }

    private int generateRandomIndex(){
        int randomIndex = (int) (Math.random()* answers.length);
        while(previousIndexes.contains(randomIndex)){
            randomIndex = (int) (Math.random()* answers.length);
        }
        previousIndexes.add(randomIndex);
        return randomIndex;
    }

    public List<Integer> getPreviousIndexes(){
        return previousIndexes;
    }
}
